package com.sfz.drools;
import java.math.BigDecimal;

import com.sfz.droolsExample.entity.Order;

function void printInfo (Long id, String nr, Integer score,  BigDecimal amount) {
    System.out.println("id=" + id + ", nr =" + nr +", score= " + score + ", amount="+ amount);
}

rule "zero"
    no-loop true
    lock-on-active true
    salience 1
    when
        $s : Order(amount.compareTo(BigDecimal.valueOf(100)) == -1)
    then
        $s.setScore(0);
        update($s);
        printInfo($s.getId(), $s.getNr(), $s.getScore(), $s.getAmount());
end

rule "add100"
    no-loop true
    lock-on-active true
    salience 1
    when
        $s : Order(amount.compareTo(BigDecimal.valueOf(100)) == 1 && amount.compareTo(BigDecimal.valueOf(500)) == -1)
    then
        $s.setScore(100);
        update($s);
        printInfo($s.getId(), $s.getNr(), $s.getScore(), $s.getAmount());
end

rule "add500"
    no-loop true
    lock-on-active true
    salience 1
    when
        $s : Order(amount.compareTo(BigDecimal.valueOf(500)) == 1 && amount.compareTo(BigDecimal.valueOf(1000)) == -1)
    then
        $s.setScore(500);
        update($s);
        printInfo($s.getId(), $s.getNr(), $s.getScore(), $s.getAmount());
end

rule "add1000"
    no-loop true
    lock-on-active true
    salience 1
    when
        $s : Order(amount.compareTo(BigDecimal.valueOf(1000)) == 1 && amount.compareTo(BigDecimal.valueOf(1500)) == -1)
    then
        $s.setScore(1000);
        update($s);
        printInfo($s.getId(), $s.getNr(), $s.getScore(), $s.getAmount());
end

rule "add1500"
    no-loop true
    lock-on-active true
    salience 1
    when
        $s : Order(amount.compareTo(BigDecimal.valueOf(1500)) == 1 && amount.compareTo(BigDecimal.valueOf(2000)) == -1)
    then
        $s.setScore(1500);
        update($s);
end

rule "add2000"
    no-loop true
    lock-on-active true
    salience 1
    when
        $s : Order(amount.compareTo(BigDecimal.valueOf(2000)) == 1)
    then
        $s.setScore(2000);
        update($s);
end